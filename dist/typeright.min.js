/*! typeRight | version 0.2.0 (13-09-2013) | author: Michael Alexander Freund | license: MIT License (http://www.opensource.org/licenses/mit-license.php) */
!function(a){"use strict";function b(a,b){for(var c in b)a[c]=b[c];return a}function c(a){return"[object Array]"===g.call(a)}function d(a){var b=[];if(c(a))b=a;else if("number"==typeof a.length)for(var d=0,e=a.length;e>d;d++)b.push(a[d]);else b.push(a);return b}function e(a){function c(a,e,g){var h=this;return h instanceof c?("string"==typeof a&&(a=document.querySelectorAll(a)),h.elements=d(a),h.options=b({erase:!1,append:!1,striptags:!0,content:"",delay:100,easing:!1},h.options),"function"==typeof e?g=e:b(h.options,e),g&&h.on("always",g),f&&(h.jqDeferred=new f.Deferred),h.options.erase?h.erase():h.type(h.options.content),void 0):new c(a,e,g)}return c.prototype=new a,c.prototype.type=function(a){for(var b=this,c=[],d=function(a,e,f,g){f===a.length?(clearTimeout(c[g]),b.elements.length===++g&&(b.emit("done",b),b.jqDeferred&&b.jqDeferred.resolve(b)),b.emit("always",b)):(e.innerText=a.substr(0,++f),b.emit("progress",b,f,e),b.jqDeferred&&b.jqDeferred.notify(b,f,e),c[g]=setTimeout(function(){d(a,e,f,g)},b.options.easing&&!b.options.append?b.options.delay/a.length*f:b.options.delay))},e=0,f=b.elements.length;f>e;e++){var g=b.elements[e],h=0;b.options.striptags&&(a=a.replace(/<[^>]*>?/g,"")),b.options.append&&(h=g.innerText.length,a=g.innerText+a),d(a,g,h,e)}},c.prototype.erase=function(){for(var a=this,b=[],c=function(d,e,f,g){0===f?(clearTimeout(b[g]),a.elements.length===++g&&(a.emit("done",a),a.jqDeferred&&a.jqDeferred.resolve(a)),a.emit("always",a)):(e.innerText=d.substr(0,--f),a.emit("progress",a,f,e),a.jqDeferred&&a.jqDeferred.notify(a,f,e),b[g]=setTimeout(function(){c(d,e,f,g)},a.options.easing?a.options.delay/d.length*f:a.options.delay))},d=0,e=a.elements.length;e>d;d++){var f=a.elements[d],g=f.textContent||f.innerText,h=g.length;c(g,f,h,d)}},f&&(f.fn.typeRight=function(a,b){var d=new c(this,a,b);return d.jqDeferred.promise(f(this))}),c}var f=a.jQuery,g=Object.prototype.toString;"function"==typeof define&&define.amd?define(["eventEmitter/EventEmitter"],e):a.TypeRight=e(a.EventEmitter)}(window);