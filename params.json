{"name":"typeRight","tagline":"A simple typewriter providing type and erase functionality","body":"# typeright\r\n\r\nA simple javascript plugin for creating typewriter effects.\r\n\r\n[mediastuttgart.github.io/typeright](http://mediastuttgart.github.io/typeright)\r\n\r\nEverything heavily inspired by the wonderful [imagesLoaded plugin](http://desandro.github.io/imagesloaded/) from [David DeSandro](https://github.com/desandro)\r\n\r\n## Install\r\n\r\nGet a packaged source file:\r\n\r\n+ [typeright.pkgd.js](http://mediastuttgart.github.io/typeright/typeright.pkgd.js)\r\n+ [typeright.pkgd.min.js](http://mediastuttgart.github.io/typeright/typeright.pkgd.min.js)\r\n\r\nOr install via [Bower](http://bower.io):\r\n\r\n``` bash\r\nbower install typeright\r\n```\r\n\r\n## Build\r\n\r\nFirst, clone a copy of the main typeRight git repository by running:\r\n\r\n``` bash\r\ngit clone git://github.com/mediastuttgart/typeright.git\r\n```\r\n\r\nInstall the grunt-cli and bower packages if you haven't before. These should be done as global installs:\r\n\r\n``` bash\r\nnpm install -g grunt-cli bower\r\n```\r\n\r\nMake sure you have grunt and bower installed by testing:\r\n\r\n``` bash\r\ngrunt -version\r\nbower -version\r\n```\r\n\r\nEnter the typeRight directory and install the Node and Bower dependencies:\r\n\r\n``` bash\r\ncd typeright && npm install && bower install\r\n```\r\n\r\nThen run grunt to build typeRight:\r\n\r\n``` bash\r\ngrunt\r\n```\r\n\r\nThe built version of typeRight will be put in the `dist/` subdirectory, along with the minified copy and packaged version including dependencies.\r\n\r\n## Usage\r\n\r\n``` js\r\ntypeRight(element, callback);\r\n```\r\n\r\nyou can use `new` if you like\r\n\r\n``` js\r\nnew typeRight(element, callback);\r\n```\r\n\r\n+ `element` _Element, NodeList, Array, or Selector String_\r\n+ `callback` _Function_ - function triggered after all characters have been processed\r\n\r\nUsing a callback function is the same as binding it to the `always` event (see below).\r\n\r\n### Element\r\n\r\n``` js\r\ntypeRight(document.querySelector('#container'), function (instance) {\r\n    console.log(instance);\r\n});\r\n```\r\n\r\n### Selector string\r\n\r\n``` js\r\ntypeRight('#container', function () {...});\r\n```\r\n\r\n### Multiple elements\r\n\r\n``` js\r\nvar buttons = document.querySelectorAll('.button');\r\ntypeRight(buttons, function () {...});\r\n```\r\n\r\n## Options\r\n\r\n``` js\r\ntypeRight(element, options, callback);\r\n```\r\n\r\n| Value     | Type      | Default   | Description                                        |\r\n| --------- | --------- | ----------| -------------------------------------------------- |\r\n| erase     | `boolean` | `false`   | Type or erase characters within the given element  |\r\n| content   | `string`  | `_empty_` | Content to type within the given element           |\r\n| append    | `boolean` | `false`   | Append characters to an existing content           |\r\n| striptags | `boolean` | `true`    | Strip HTML-Tags from the given content             |\r\n| delay     | `integer` | `100`     | Delay between each processed character             |\r\n| easing    | `boolean` | `false`   | Enables easing when processing characters          |\r\n\r\n### Type\r\n\r\n``` js\r\ntypeRight(element, {\r\n    content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit ...',\r\n    append: true,\r\n    delay: 20,\r\n    easing: true\r\n});\r\n```\r\n\r\n### Erase\r\n\r\n``` js\r\ntypeRight(element, {\r\n    erase: true,\r\n    delay: 40,\r\n    easing: true\r\n});\r\n```\r\n\r\n## Events\r\n\r\ntypeRight is an Event Emitter. You can bind event listeners to events.\r\n\r\n``` js\r\nvar typer = typeRight(element);\r\nfunction onAlways (instance) {\r\n    console.log('always');\r\n}\r\n```\r\n\r\nBind with `.on()`\r\n\r\n```js\r\ntyper.on('always', onAlways);\r\n```\r\n\r\nUnbind with `.off()`\r\n\r\n```js\r\ntyper.off('always', onAlways);\r\n```\r\n\r\n### always\r\n\r\n``` js\r\ntyper.on('always', function (instance) {\r\n    console.log('always - all characters have been processed');\r\n});\r\n```\r\n\r\nTriggered after all characters have been processed.\r\n\r\n+ `instance` _TypeRight_ - typeRight instance\r\n\r\n### done\r\n\r\n``` js\r\ntyper.on('done', function (instance) {\r\n    console.log('always - all characters have been successfully processed');\r\n});\r\n```\r\n\r\nTriggered after all characters have been successfully processed.\r\n\r\n+ `instance` _TypeRight_ - typeRight instance\r\n\r\n### progress\r\n\r\n``` js\r\ntyper.on('progress', function (instance, position, element) {\r\n    console.log('current caret position: ' + position);\r\n});\r\n```\r\n\r\nTriggered after a single character has been processed.\r\n\r\n+ `instance` _TypeRight_ - typeRight instance\r\n+ `position` _number_ - current position of the caret\r\n+ `element` _object_ - element with which typeRight operates\r\n\r\n## jQuery\r\n\r\nIf you include jQuery, typeRight can be used as a jQuery Plugin.\r\n\r\n``` js\r\n$('#container').typeRight(function () {\r\n  // callback\r\n});\r\n```\r\n\r\n### jQuery Deferred\r\n\r\nThe jQuery plugin returns a [jQuery Deferred object](http://api.jquery.com/category/deferred-object/). This allows you to use `.always()`, `.done()` and `.progress()`, similarly to the emitted events.\r\n\r\n``` js\r\n$('#container').typeRight()\r\n    .always(function (instance) {\r\n        console.log('always - all characters have been processed');\r\n    })\r\n    .done(function (instance) {\r\n        console.log('always - all characters have been successfully processed');\r\n    })\r\n    .progress(function (instance, position, element) {\r\n        console.log('current caret position: ' + position);\r\n    });\r\n```\r\n\r\n## RequireJS\r\n\r\ntypeRight works with RequireJS.\r\n\r\n1. Install typeRight and its dependencies\r\n2. Update your [RequireJS paths config](http://requirejs.org/docs/api.html#config-paths) so it can find those modules\r\n\r\n``` js\r\nrequirejs.config({\r\n  paths: {\r\n    \"eventEmitter\": \"bower_components/eventEmitter\"\r\n  }\r\n});\r\n```\r\n\r\n## MIT License\r\n\r\ntypeRight is released under the [MIT License](http://desandro.mit-license.org/).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}